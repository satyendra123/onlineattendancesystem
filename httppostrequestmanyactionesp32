#include <WiFi.h>
#include <HTTPClient.h>

// Replace these with your network credentials
const char* ssid = "your_SSID";
const char* password = "your_PASSWORD";

// Replace with your server URL
const char* serverUrl = "http://your_server_url/";

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);

  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  
  Serial.println("Connected to WiFi");
}

void loop() {
  ChecktoAddID();
  ChecktoDeleteID();
  ChecktoUpdateID();
  delay(10000); // Check actions every 10 seconds
}

void ChecktoAddID() {
  WiFiClient client;
  HTTPClient http;

  String postData = "Get_Fingerid=get_id"; // Add the Fingerprint ID to the Post array in order to send it

  http.begin(client, String(serverUrl) + "check_add_id/");  // Initiate HTTP request
  http.addHeader("Content-Type", "application/x-www-form-urlencoded");    // Specify content-type header
  
  int httpCode = http.POST(postData);   // Send the request
  String payload = http.getString();    // Get the response payload

  if (httpCode > 0) { // Check for the returning code
    Serial.printf("HTTP Response code: %d\n", httpCode);
    Serial.println("Payload: " + payload);

    if (payload.startsWith("add-id")) {
      String add_id = payload.substring(6);
      Serial.println("Add ID: " + add_id);
      int id = add_id.toInt();
      getFingerprintEnroll(id);
    }
  } else {
    Serial.printf("Error in HTTP request: %s\n", http.errorToString(httpCode).c_str());
  }
  
  http.end();  // Close connection
}

void ChecktoDeleteID() {
  WiFiClient client;
  HTTPClient http;

  String postData = "Action=check"; // Add the action to the Post array in order to send it

  http.begin(client, String(serverUrl) + "check_delete_id/");  // Initiate HTTP request
  http.addHeader("Content-Type", "application/x-www-form-urlencoded");    // Specify content-type header
  
  int httpCode = http.POST(postData);   // Send the request
  String payload = http.getString();    // Get the response payload

  if (httpCode > 0) { // Check for the returning code
    Serial.printf("HTTP Response code: %d\n", httpCode);
    Serial.println("Payload: " + payload);

    if (payload.startsWith("del-id")) {
      String id = payload.substring(6);
      Serial.println("Delete ID: " + id);
      deleteFingerprint(id.toInt());
    }
  } else {
    Serial.printf("Error in HTTP request: %s\n", http.errorToString(httpCode).c_str());
  }
  
  http.end();  // Close connection
}

void ChecktoUpdateID() {
  WiFiClient client;
  HTTPClient http;

  String postData = "Action=check"; // Add the action to the Post array in order to send it

  http.begin(client, String(serverUrl) + "check_update_id/");  // Initiate HTTP request
  http.addHeader("Content-Type", "application/x-www-form-urlencoded");    // Specify content-type header
  
  int httpCode = http.POST(postData);   // Send the request
  String payload = http.getString();    // Get the response payload

  if (httpCode > 0) { // Check for the returning code
    Serial.printf("HTTP Response code: %d\n", httpCode);
    Serial.println("Payload: " + payload);

    if (payload.startsWith("update-id")) {
      String id = payload.substring(9);
      Serial.println("Update ID: " + id);
      updateFingerprint(id.toInt());
    }
  } else {
    Serial.printf("Error in HTTP request: %s\n", http.errorToString(httpCode).c_str());
  }
  
  http.end();  // Close connection
}

void deleteFingerprint(int id) {
  // Dummy implementation, replace with your actual code
  Serial.printf("Fingerprint ID %d deleted.\n", id);
}

void addFingerprint(int id) {
  // Dummy implementation, replace with your actual code
  Serial.printf("Fingerprint ID %d added.\n", id);
}

void updateFingerprint(int id) {
  // Dummy implementation, replace with your actual code
  Serial.printf("Fingerprint ID %d updated.\n", id);
}

void getFingerprintEnroll(int id) {
  // Dummy implementation, replace with your actual code
  Serial.printf("Enrolling Fingerprint ID %d.\n", id);
}
